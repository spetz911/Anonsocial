from django.db.models import *

# Create your models here.

class Person(Model):
	id = AutoField(primary_key=True) # it sets automaticly
	name = CharField(max_length=50)
	tripcode = CharField(max_length=50, blank = True)
	regdate = DateField(auto_now_add=True)
	email = EmailField(blank = True)
	password = CharField(max_length=50, blank = True)
	friends = ManyToManyField('self', null=True, blank=True)
	deleted = BooleanField(default = False)
	
	def __unicode__(self):
		if self.tripcode:
			return self.tripcode
		else:
			return self.name
			

## add inheritance here

class Board(Model):
	title = CharField(max_length=50)
	dir = CharField(max_length=50, blank = True)
	description = TextField(blank = True)

	def __unicode__(self):
		return self.title



class Tag(Model):
	name = CharField(max_length=50)
	description = TextField(blank = True)
	# thread = ManyToManyField(Thread) creates implicit

	def __unicode__(self):
		return self.name

class Msg(Model):
	person = ForeignKey(Person, null = True, blank=True)
	time = DateTimeField(auto_now=True)
	message = TextField(blank = True)
	subject = CharField(max_length=50, blank=True)
	picture = CharField(max_length=50, blank=True)
	audio   = CharField(max_length=50, blank=True)
	show_name = BooleanField(default = False)
	show_tripcode = BooleanField(default = False)

	def __unicode__(self):
		if self.subject:
			return  self.subject
		else:
			return " ".join(self.message.split()[:3]) + "..."

class Thread(Msg):
	board = ForeignKey(Board)
	tag = ManyToManyField(Tag, blank=True, null = True)

class Post(Msg):
	thread = ForeignKey(Thread, null = True)
	parent = ForeignKey('self', null=True, blank=True)

class PrivMsg(Msg):
	destination = ForeignKey(Person, null = True)








